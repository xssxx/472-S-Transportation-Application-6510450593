name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - develop

jobs:
  test_and_build_backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Set up Maven Cache
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Run Unit Tests (JUnit)
        run: |
          sed -i 's/\r$//' mvnw  # ลบ CRLF (Windows line endings) ออกจากไฟล์ mvnw
          chmod +x mvnw  # ให้สิทธิ์ในการ execute ให้ไฟล์ mvnw

      - name: Build Spring Boot Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/spring-backend:latest -f Dockerfile .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Spring Boot Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/spring-backend:latest

  build_and_push_frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install Dependencies and Build
        run: |
          cd frontend
          npm install
          npm run build

      - name: Build Vue.js Frontend Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/vue-frontend:latest -f frontend/Dockerfile frontend

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Vue.js Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/vue-frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: [test_and_build_backend, build_and_push_frontend]
    steps:
      - name: SSH into Server and Deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/spring-backend:latest
            docker pull ${{ secrets.DOCKER_USERNAME }}/vue-frontend:latest
            docker-compose up -d
